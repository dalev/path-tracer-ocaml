(executable
 (package path_tracer)
 (public_name shirley_spheres)
 (name main)
 (preprocess
  (pps ppx_base))
 (libraries base path_tracer render_command sphere stdio)
 (foreign_archives sphere_intersect))

(rule
 (targets libsphere_intersect.a dllsphere_intersect.so)
 (deps
  ; we explicitly set RUSTFLAGS below, so I think it's correct not to depend on it here.
  ; (env_var RUSTFLAGS)
  %{project_root}/sphere-intersect-rs/Cargo.toml
  %{project_root}/sphere-intersect-rs/Cargo.lock
  (source_tree %{project_root}/sphere-intersect-rs/src))
 (action
  (no-infer
   (progn
    (chdir
     %{project_root}/sphere-intersect-rs
     (setenv
      RUSTFLAGS
      "-C target-cpu=native -C link-args=-Wl,-undefined,dynamic_lookup"
      (run cargo build --release)))
    (copy
     %{project_root}/sphere-intersect-rs/target/release/libsphere_intersect%{ext_lib}
     libsphere_intersect.a)
    (copy
     ;%{project_root}/sphere-intersect-rs/target/release/libsphere_intersect%{ext_dll}
     %{project_root}/sphere-intersect-rs/target/release/libsphere_intersect.dylib
     dllsphere_intersect.so)))))
